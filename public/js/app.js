(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"/Users/hoppula/repos/liiga_frontend/client.coffee":[function(require,module,exports){
var React, appContainer, director, render, sharedRoutes;

director = require('director');

React = require('react');

sharedRoutes = require('./routes')(require('./lib/ajax'));

appContainer = document.getElementById('app');

render = function(options) {
  if (options == null) {
    options = {};
  }
  document.getElementsByTagName("title")[0].innerHTML = options.title;
  return React.renderComponent(options.component, appContainer);
};

document.addEventListener("DOMContentLoaded", function() {
  var action, route, router, _fn;
  React.initializeTouchEvents(true);
  router = director.Router().configure({
    html5history: true
  });
  _fn = function(route, action) {
    return router.on(route, function() {
      return action.apply(this, arguments).then(function(options) {
        return render(options);
      }).fail(function(error) {
        return console.log("error", error);
      }).done();
    });
  };
  for (route in sharedRoutes) {
    action = sharedRoutes[route];
    _fn(route, action);
  }
  router.init("/");
  return document.addEventListener('click', function(event) {
    var protocol, target;
    target = event.target;
    protocol = "" + target.protocol + "//";
    if (target.href.slice(protocol.length) !== protocol) {
      event.preventDefault();
      return router.setRoute(target.href);
    }
  });
});



},{"./lib/ajax":"/Users/hoppula/repos/liiga_frontend/lib/ajax.coffee","./routes":"/Users/hoppula/repos/liiga_frontend/routes.coffee","director":"director","react":"react"}],"/Users/hoppula/repos/liiga_frontend/lib/ajax.coffee":[function(require,module,exports){
var Q, request;

Q = require('q');

request = require('browser-request');

module.exports = function(options) {
  var deferred, opts;
  deferred = Q.defer();
  opts = {
    url: options.url,
    method: options.method || "GET",
    json: true
  };
  if (options.data) {
    opts.body;
  }
  request(opts, function(err, resp, body) {
    if (err) {
      deferred.reject(err);
      if (options.error) {
        return options.error(err);
      }
    } else {
      deferred.resolve(body);
      if (options.success) {
        return options.success(body);
      }
    }
  });
  return deferred.promise;
};



},{"browser-request":"browser-request","q":"q"}],"/Users/hoppula/repos/liiga_frontend/routes.coffee":[function(require,module,exports){
var Q, React, TeamView, TeamsListView;

React = require('react');

Q = require('q');

TeamsListView = require('./views/teams_list');

TeamView = require('./views/team');

module.exports = function(ajax) {
  var stats, team, teams;
  teams = ajax({
    url: "http://192.168.11.6:4000/json/teams.json"
  });
  team = function(id) {
    return ajax({
      url: "http://192.168.11.6:4000/json/" + id + ".json"
    });
  };
  stats = ajax({
    url: "http://192.168.11.6:4000/json/stats.json"
  });
  return {
    "/": function() {
      return Q.spread([teams, stats], function(teamsList, statsList) {
        return {
          title: "Etusivu",
          component: TeamsListView({
            teams: teamsList,
            stats: statsList
          })
        };
      });
    },
    "/joukkueet/:id": function(id) {
      return team(id).then(function(team) {
        return {
          title: "Joukkueet - " + id,
          component: TeamView({
            team: team
          })
        };
      });
    }
  };
};



},{"./views/team":"/Users/hoppula/repos/liiga_frontend/views/team.coffee","./views/teams_list":"/Users/hoppula/repos/liiga_frontend/views/teams_list.coffee","q":"q","react":"react"}],"/Users/hoppula/repos/liiga_frontend/views/player_stats.coffee":[function(require,module,exports){
var PlayerStats, React;

React = require('react');

PlayerStats = React.createClass({
  render: function() {
    return React.DOM.table({
      "className": "table table-striped"
    }, React.DOM.thead(null, React.DOM.tr(null, React.DOM.th(null, "First name"), React.DOM.th(null, "Last name"), React.DOM.th(null, "Games"), React.DOM.th(null, "Goals"), React.DOM.th(null, "Assists"), React.DOM.th(null, "Points"), React.DOM.th(null, "Penalties"), React.DOM.th(null, "+\x2F-"))), this.props.stats.map(function(player) {
      return React.DOM.tr(null, React.DOM.td(null, player.firstName), React.DOM.td(null, player.lastName), React.DOM.td(null, player.games), React.DOM.td(null, player.goals), React.DOM.td(null, player.assists), React.DOM.td(null, player.points), React.DOM.td(null, player.penalties), React.DOM.td(null, player.plusMinus));
    }));
  }
});

module.exports = PlayerStats;



},{"react":"react"}],"/Users/hoppula/repos/liiga_frontend/views/team.coffee":[function(require,module,exports){
var PlayerStats, React, Team, TeamSchedule;

React = require('react');

PlayerStats = require('./player_stats');

TeamSchedule = require('./team_schedule');

Team = React.createClass({
  render: function() {
    return React.DOM.div({
      "className": "team"
    }, React.DOM.div(null, this.props.team.name), React.DOM.h1(null, "Pelaajatilastot"), PlayerStats({
      "stats": this.props.team.playerStats
    }), React.DOM.h1(null, "Ottelut"), TeamSchedule({
      "schedule": this.props.team.schedule
    }), React.DOM.div(null, this.props.team.teamStats.city));
  }
});

module.exports = Team;



},{"./player_stats":"/Users/hoppula/repos/liiga_frontend/views/player_stats.coffee","./team_schedule":"/Users/hoppula/repos/liiga_frontend/views/team_schedule.coffee","react":"react"}],"/Users/hoppula/repos/liiga_frontend/views/team_item.coffee":[function(require,module,exports){
var React, TeamItem;

React = require('react');

TeamItem = React.createClass({
  render: function() {
    return React.DOM.a({
      "className": "team " + this.props.team.id + " btn btn-default btn-lg btn-block",
      "href": "/joukkueet/" + this.props.team.id
    }, this.props.team.name);
  }
});

module.exports = TeamItem;



},{"react":"react"}],"/Users/hoppula/repos/liiga_frontend/views/team_schedule.coffee":[function(require,module,exports){
var React, TeamSchedule;

React = require('react');

TeamSchedule = React.createClass({
  render: function() {
    return React.DOM.table({
      "className": "table table-striped"
    }, React.DOM.thead(null, React.DOM.tr(null, React.DOM.th(null, "Date"), React.DOM.th(null, "Teams"), React.DOM.th(null, "Score"), React.DOM.th(null, "Attendance"))), this.props.schedule.map(function(match) {
      return React.DOM.tr(null, React.DOM.td(null, match.date, " ", match.time), React.DOM.td(null, match.home, " - ", match.visitor), React.DOM.td(null, match.homeScore, "-", match.visitorScore), React.DOM.td(null, match.attendance));
    }));
  }
});

module.exports = TeamSchedule;



},{"react":"react"}],"/Users/hoppula/repos/liiga_frontend/views/teams_list.coffee":[function(require,module,exports){
var React, TeamItem, TeamsList, TopScorers;

React = require('react');

TeamItem = require('./team_item');

TopScorers = require('./top_scorers');

TeamsList = React.createClass({
  render: function() {
    return React.DOM.div(null, React.DOM.div({
      "className": "navbar navbar-default"
    }, React.DOM.div({
      "className": "navbar-header"
    }, React.DOM.p({
      "className": "navbar-brand"
    }, "Liiga"))), React.DOM.div({
      "className": "jumbotron"
    }, React.DOM.h1(null, "Liiga.pw"), React.DOM.p(null, "Kaikki Liigasta nopeasti ja vaivattomasti")), React.DOM.div({
      "className": "row"
    }, React.DOM.div({
      "className": "teams_view col-xs-12 col-sm-6"
    }, this.props.teams.map(function(team) {
      return TeamItem({
        key: team.id,
        team: team
      });
    })), React.DOM.div({
      "className": "col-xs-12 col-sm-6"
    }, TopScorers({
      "stats": this.props.stats
    }))));
  }
});

module.exports = TeamsList;



},{"./team_item":"/Users/hoppula/repos/liiga_frontend/views/team_item.coffee","./top_scorers":"/Users/hoppula/repos/liiga_frontend/views/top_scorers.coffee","react":"react"}],"/Users/hoppula/repos/liiga_frontend/views/top_scorers.coffee":[function(require,module,exports){
var React, TopScorers;

React = require('react');

TopScorers = React.createClass({
  render: function() {
    return React.DOM.table({
      "className": "table table-striped"
    }, React.DOM.thead(null, React.DOM.tr(null, React.DOM.th(null, "Name"), React.DOM.th(null, "Games"), React.DOM.th(null, "Goals"), React.DOM.th(null))), this.props.stats.scoringStats.map(function(player) {
      return React.DOM.tr(null, React.DOM.td(null, player.firstName, " ", player.lastName), React.DOM.td(null, player.games), React.DOM.td(null, player.goals), React.DOM.td(null));
    }));
  }
});

module.exports = TopScorers;



},{"react":"react"}]},{},["/Users/hoppula/repos/liiga_frontend/client.coffee"])
//# sourceMappingURL=data:application/json;base64,
